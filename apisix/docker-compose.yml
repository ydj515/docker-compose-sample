version: "3.9"

services:
  nginx:
    image: nginx:1.27.4
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - apisix1
      - apisix2
    networks:
      - apisix_network

  redis:
    image: redis:7.4.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - apisix_network

  etcd:
    image: bitnami/etcd:3.5.11
    container_name: etcd
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_AUTO_COMPACTION_MODE: "revision"
      ETCD_AUTO_COMPACTION_RETENTION: "100"
    ports:
      - "2379:2379/tcp"
    networks:
      - apisix_network

  apisix1:
    build: .
    container_name: apisix1
    ports:
      - "${APISIX_ADMIN_API_PORT:-9180}:9180/tcp"
      - "${APISIX_PORT_9080:-9080}:9080/tcp"
      - "${APISIX_PORT_9091:-9091}:9091/tcp"
      - "${APISIX_PORT_9443:-9443}:9443/tcp"
      - "${APISIX_PORT_9092:-9092}:9092/tcp"
    volumes:
      - ./apisix/apisix1.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./apisix/plugins:/opt/apisix/plugins:ro
      - ./apisix/libs:/usr/local/apisix/libs:ro
      - ./apisix/override/util.lua:/usr/local/apisix/apisix/plugins/limit-req/util.lua
    depends_on:
      - redis
      - etcd
    networks:
      - apisix_network

  apisix2:
    build: .
    container_name: apisix2
    ports:
      - "${APISIX2_ADMIN_API_PORT:-9280}:9180/tcp"
      - "${APISIX2_PORT_9080:-9181}:9080/tcp"
      - "${APISIX2_PORT_9091:-9191}:9091/tcp"
      - "${APISIX2_PORT_9443:-9543}:9443/tcp"
      - "${APISIX2_PORT_9092:-9192}:9092/tcp"
    volumes:
      - ./apisix/apisix2.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./apisix/plugins:/opt/apisix/plugins:ro
      - ./apisix/libs:/usr/local/apisix/libs:ro
      - ./apisix/override/util.lua:/usr/local/apisix/apisix/plugins/limit-req/util.lua
    depends_on:
      - redis
      - etcd
    networks:
      - apisix_network

  prometheus:
    image: prom/prometheus:v2.25.0
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      apisix_network:

  limit_req_exporter:
    container_name: limit_req_exporter
    build:
      context: ./limit_req_exporter
      dockerfile: Dockerfile_python
    restart: always
    depends_on:
      - apisix1
      - apisix2
    ports:
      - "8000:8000"
    environment:
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    networks:
      apisix_network:

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana-apisix
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
    networks:
      apisix_network:

networks:
  apisix_network:
    driver: bridge

volumes:
  etcd_data:
    driver: local
