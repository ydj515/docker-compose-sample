version: "3.9"

networks:
  default:
    name: otel-demo
    driver: bridge

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.119.0
    volumes:
      - ./collector/otel-config.yaml:/etc/otelcol-contrib/config.yaml
      # - ./secretkey/server.key:/etc/otelcol-contrib/server.key
      # - ./secretkey/server.crt:/etc/otelcol-contrib/server.crt
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages
    environment:
      - OTEL_COLLECTOR_GRPC_ADDR=${OTEL_COLLECTOR_GRPC_ADDR}
      - OTEL_COLLECTOR_HTTP_ADDR=${OTEL_COLLECTOR_HTTP_ADDR}
      - JAEGER_EXPORTER_PORT=${JAEGER_EXPORTER_PORT}
      - PROMETHEUS_ADDR=${PROMETHEUS_ADDR}
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:1.42
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
    ports:
      - "16686:16686" # Jaeger UI
      - "5778:5778" # Jaeger agent admin port
      - "4317" # grpc

  prometheus:
    image: prom/prometheus:v2.48.0
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=otlp-write-receiver
      - --enable-feature=exemplar-storage
    environment:
      - OTEL_COLLECTOR_HOST=${OTEL_COLLECTOR_HOST}
      - OTEL_COLLECTOR_METRIC_PORT=${OTEL_COLLECTOR_METRIC_PORT}
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:main-a9424ae
    command: ["-config.file=/etc/tempo.yaml"]
    ports:
      - "3200:3200"
      - "4317" # grpc
      - "4318" # http
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml

  loki:
    image: grafana/loki:3.0.0
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:3.0.0
    volumes:
      - /var/log:/var/log # 실제 로그 파일 경로와 promptail.yaml의 __path__ 경로 기입
      # - /opt/homebrew/Cellar/wildfly-as/35.0.1/libexec/standalone/log:/var/log/wildfly
      - ./promtail/promtail.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:11.5.2
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - otel-collector
      - loki

  node-cexporter:
    image: prom/node-exporter:v1.9.1
    ports:
      - "9100:9100"
    # command:
    #   - '--path.rootfs=/host'
    # network_mode: host
    # pid: host
    # restart: unless-stopped
    # volumes:
    #   - '/:/host:ro,rslave'
